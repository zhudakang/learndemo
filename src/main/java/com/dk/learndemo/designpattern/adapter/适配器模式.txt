适配器模式的个人理解：
并不是行为形的设计模式，而是一种结构型的设计模式。
这种思想是：把一个类的接口转换成客户端所期待的另一种接口(或者是客户期待的)，从而使原本因为接口不匹配而无法在一起工作的两个类
可以一起工作。
打个比喻：有一个电器的插头是三个角的，但是现在的插座是两孔的，要使插头插上插座，我们就需要一个转换器，这个转换器就是适配器。

adapter~ 在java项目中很多时候可以遇见

适配器模式涉及3个角色：

源（Adaptee）：需要被适配的对象或类型，相当于插头。
适配器（Adapter）：连接目标和源的中间对象，相当于插头转换器。
目标（Target）：期待得到的目标，相当于插座。

(类，对象，接口都可以适配)
适配器模式包括3种形式：类适配器模式、对象适配器模式、接口适配器模式（或又称作缺省适配器模式）。


