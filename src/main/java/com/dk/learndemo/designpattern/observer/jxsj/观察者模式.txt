设计模式要干的事情就是解耦。
创建型模式是将创建和使用代码解耦；
结构型模式是将不同功能代码解耦；
行为型模式是将不同的行为代码解耦；
这里面观察者模式属于行为型；它是将观察者和被观察者代码解耦。
比如说业务中登录功能，登陆成功可能要做很多事情，而且要求同步完成的话。
比如登陆成功需要增加积分、更新登录时间、之后还可能给登录要去通知其他系统等等
这些功能如果都写在login方法里面，就会变得很臃肿而且不好维护。
如果注册一些观察者呢，登陆成功之后就从观察者列表循环一下，执行登陆成功之后的操作，那么就将这些行为隔离开来了，后续修改功能点都在不同的类上面了。

关于闭合原则？
开放原则是指设计的架构具备良好的拓展性；
而关闭原则是说系统的架构主链路不能随着业务迭代而大改。
可以接受拓展，但是减少更改。


